{
    "openapi": "3.0.2",
    "info": {
        "title": "Blog API with Go",
        "version": "1.0",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/license/mit/"
        },
        "contact": {
            "name": "Clouza(Siwa)",
            "url": "https://github.com/clouza"
        }
    },
    "servers": [
        {
            "url": "https://localhost:8000/api/v1",
            "description": "API endpoints for Blog project"
        }
    ],
    "paths": {
        "/records": {
            "get": {
                "security": [
                    {
                        "Authentication": []
                    }
                ],
                "tags": [
                    "Records"
                ],
                "summary": "Get all records",
                "description": "Get all records",
                "responses": {
                    "200": {
                        "description": "200 response code",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "description": "The response can be an empty array if there are no records"
                                },
                                "example": [
                                    {
                                        "id": 1,
                                        "title": "Welcome to my blog my friend!",
                                        "slug": "welcome-to-my-blog",
                                        "body": {
                                            "time": 1550476186479,
                                            "blocks": [
                                                {
                                                    "type": "paragraph",
                                                    "data": {
                                                        "text": "The example of text that was written in <b>one of popular</b> text editors."
                                                    }
                                                },
                                                {
                                                    "type": "header",
                                                    "data": {
                                                        "text": "With the header of course",
                                                        "level": 2
                                                    }
                                                },
                                                {
                                                    "type": "paragraph",
                                                    "data": {
                                                        "text": "So what do we have?"
                                                    }
                                                }
                                            ],
                                            "version": "2.8.1"
                                        },
                                        "is_pinned": false,
                                        "created_at": "25-07-2023 12:55:00"
                                    },
                                    {
                                        "id": 2,
                                        "title": "Welcome to my second blog my friend!",
                                        "slug": "welcome-to-my-second-blog",
                                        "body": {
                                            "time": 1550476186479,
                                            "blocks": [
                                                {
                                                    "type": "paragraph",
                                                    "data": {
                                                        "text": "The example of text that was written in <b>one of popular</b> text editors."
                                                    }
                                                },
                                                {
                                                    "type": "header",
                                                    "data": {
                                                        "text": "With the header of course",
                                                        "level": 2
                                                    }
                                                },
                                                {
                                                    "type": "paragraph",
                                                    "data": {
                                                        "text": "So what do we have?"
                                                    }
                                                }
                                            ],
                                            "version": "2.8.1"
                                        },
                                        "is_pinned": false,
                                        "created_at": "25-07-2023 12:55:01"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400ResponseCode"
                    },
                    "500": {
                        "$ref": "#/components/responses/500ResponseCode"
                    }
                }
            }
        },
        "/record": {
            "post": {
                "security": [
                    {
                        "Authentication": []
                    }
                ],
                "tags": [
                    "Record"
                ],
                "summary": "Post a record",
                "description": "Post a single record",
                "requestBody": {
                    "$ref": "#/components/requestBodies/CreateAndUpdateRequestBody"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200ResponseCode"
                    },
                    "404": {
                        "$ref": "#/components/responses/400ResponseCode"
                    },
                    "500": {
                        "$ref": "#/components/responses/500ResponseCode"
                    }
                }
            }
        },
        "/record/{slug}": {
            "get": {
                "security": [
                    {
                        "Authentication": []
                    }
                ],
                "tags": [
                    "Record with Slug"
                ],
                "summary": "Get the record",
                "description": "Get a single record depending on their slug (unique name)",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/SlugPathVariable"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200ResponseCode"
                    },
                    "404": {
                        "$ref": "#/components/responses/400ResponseCode"
                    },
                    "500": {
                        "$ref": "#/components/responses/500ResponseCode"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Authentication": []
                    }
                ],
                "tags": [
                    "Record with Slug"
                ],
                "summary": "Update the record",
                "description": "Update a single record depending on their slug (unique name)",
                "requestBody": {
                    "$ref": "#/components/requestBodies/CreateAndUpdateRequestBody"
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/SlugPathVariable"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200ResponseCode"
                    },
                    "404": {
                        "$ref": "#/components/responses/400ResponseCode"
                    },
                    "500": {
                        "$ref": "#/components/responses/500ResponseCode"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Authentication": []
                    }
                ],
                "tags": [
                    "Record with Slug"
                ],
                "summary": "Delete the record",
                "description": "Delete a single record depending on their slug (unique name)",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/SlugPathVariable"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200ResponseCode"
                    },
                    "404": {
                        "$ref": "#/components/responses/400ResponseCode"
                    },
                    "500": {
                        "$ref": "#/components/responses/500ResponseCode"
                    }
                }
            }
        }
    },
    "components": {
        "parameters": {
            "SlugPathVariable": {
                "name": "slug",
                "description": "A slug is the part of a URL that identifies a particular page on a website in an easy-to-read form",
                "in": "path",
                "required": true,
                "allowEmptyValue": false,
                "schema": {
                    "type": "string",
                    "nullable": false,
                    "default": "welcome"
                }
            }
        },
        "requestBodies": {
            "CreateAndUpdateRequestBody": {
                "description": "A request body is data sent by the client to the API",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "number",
                                    "default": "A primary key",
                                    "example": "1"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "The title can be different with slug and case-insensitive",
                                    "example": "Welcome to my blog my friend!"
                                },
                                "slug": {
                                    "type": "string",
                                    "description": "A slug should be lower case and whitespace replace with hypen",
                                    "example": "welcome-to-my-blog",
                                    "uniqueItems": true
                                },
                                "body": {
                                    "type": "object",
                                    "description": "The object will be generated by the Editor.js (https://editorjs.io/)",
                                    "example": {
                                        "time": 1550476186479,
                                        "blocks": [
                                            {
                                                "type": "paragraph",
                                                "data": {
                                                    "text": "The example of text that was written in <b>one of popular</b> text editors."
                                                }
                                            },
                                            {
                                                "type": "header",
                                                "data": {
                                                    "text": "With the header of course",
                                                    "level": 2
                                                }
                                            },
                                            {
                                                "type": "paragraph",
                                                "data": {
                                                    "text": "So what do we have?"
                                                }
                                            }
                                        ],
                                        "version": "2.8.1"
                                    }
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": "25-07-2023 12:55:00",
                                    "description": "Time must use UTC zone"
                                }
                            }
                        }
                    }
                },
                "required": true
            }
        },
        "responses": {
            "200ResponseCode": {
                "description": "200 response code",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ResponseSchema"
                        }
                    }
                }
            },
            "400ResponseCode": {
                "description": "400 response code",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ResponseSchema"
                        }
                    }
                }
            },
            "500ResponseCode": {
                "description": "500 response code",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ResponseSchema"
                        }
                    }
                }
            }
        },
        "schemas": {
            "ResponseSchema": {
                "type": "object",
                "properties": {
                    "response": {
                        "type": "string",
                        "description": "Response message"
                    },
                    "code": {
                        "type": "number",
                        "description": "HTTP Response code"
                    }
                }
            }
        },
        "securitySchemes": {
            "Authentication": {
                "type": "apiKey",
                "in": "header",
                "name": "g-auth",
                "description": "how this project authenticate"
            }
        }
    }
}